FASTLANE_DIRECTORY = File.dirname(__FILE__)
$LOAD_PATH.unshift(FASTLANE_DIRECTORY + '/lib')
require 'vams/client'
require 'vams/metadata'

# Customise this file, documentation can be found here:
# https://github.com/KrauseFx/fastlane/tree/master/docs
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.36.0"

default_platform :ios

FASTLANE_METADATA_PATHS = {
  description: FASTLANE_DIRECTORY + '/metadata/en-US/description.txt'
}

def apply_config(build_name:)
  sh "cd ../../ && ./build-scripts/apply-config.sh #{build_name}"
end

def prepare_metadata_for_submission(build_name:)
  app_with_meta = VAMS::Client.app_by_build_name(build_name)
  metadata      = VAMS::Metadata.new(app_with_meta)
  save_text_into_file(text: metadata.ios_description, path: FASTLANE_METADATA_PATHS[:description])
end

def save_text_into_file(text:, path:)
  File.open(path, File::WRONLY) do |file|
    file.write(text)
  end
end

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    # cocoapods

    # increment_build_number

    # xctool # run the tests of your app
  end

  desc "Deploy a new version to the App Store"
  lane :deploy do
    VAMS::Client.apps_to_build.each do |app|
      apply_config(build_name: app.build_name)
      prepare_metadata_for_submission(build_name: app.build_name)
      sigh
      gym(
        scheme: 'release-victorious',
        codesigning_identity: 'iPhone Distribution: Victorious Inc. (82T26U698A)',
      )

      deliver(force: true)
    end
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end

# More information about multiple platforms in fastlane: https://github.com/KrauseFx/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/KrauseFx/fastlane/blob/master/docs/Actions.md
